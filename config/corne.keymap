#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <24>;
};

#define DEFAULT    0
#define NUM        1
// #define SYM        2
#define NAV        2
#define MEDIA      3
#define FUNC       4

&caps_word {
  continue-list = <UNDERSCORE MINUS>;
};


/ {
  combos {
    compatible = "zmk,combos";
    combo_shift_left {
      timeout-ms = <50>;
      key-positions = <15 16>;
      bindings = <&kp LSHIFT>;
      layers = <DEFAULT>;
    };
    combo_shift_right {
      timeout-ms = <50>;
      key-positions = <19 20>;
      bindings = <&kp RSHIFT>;
      layers = <DEFAULT>;
    };
    // combo_sym_left {
    //   timeout-ms = <50>;
    //   key-positions = <27 28>;
    //   bindings = <&mo SYM>;
    // };
    // combo_sym_right {
    //   timeout-ms = <50>;
    //   key-positions = <31 32>;
    //   bindings = <&mo SYM>;
    // };
    combo_num_left {
      timeout-ms = <75>;
      key-positions = <14 15>;
      bindings = <&mo NUM>;
      layers = <DEFAULT>;
    };
    combo_num_right {
      timeout-ms = <75>;
      key-positions = <20 21>;
      bindings = <&mo NUM>;
      layers = <DEFAULT>;
    };
    combo_nav {
      timeout-ms = <50>;
      key-positions = <13 14>;
      bindings = <&mo NAV>;
      layers = <DEFAULT>;
    };
    combo_media {
      timeout-ms = <50>;
      key-positions = <21 22>;
      bindings = <&mo MEDIA>;
      layers = <DEFAULT>;
    };
    // combo_ctrl_left {
    //   timeout-ms = <50>;
    //   key-positions = <16 36>;
    //   bindings = <&kp LCTRL>;
    // };
    // combo_ctrl_right {
    //   timeout-ms = <50>;
    //   key-positions = <19 41>;
    //   bindings = <&kp RCTRL>;
    // };
    // combo_alt_left {
    //   timeout-ms = <50>;
    //   key-positions = <16 37>;
    //   bindings = <&kp LALT>;
    // };
    // combo_alt_right {
    //   timeout-ms = <50>;
    //   key-positions = <19 40>;
    //   bindings = <&kp RALT>;
    // };
    // combo_cmd_left {
    //   timeout-ms = <50>;
    //   key-positions = <16 38>;
    //   bindings = <&kp LCMD>;
    // };
    // combo_cmd_right {
    //   timeout-ms = <50>;
    //   key-positions = <19 39>;
    //   bindings = <&kp RCMD>;
    // };
    // combo_del {
    //   timeout-ms = <100>;
    //   key-positions = <19 20 39>;
    //   bindings = <&kp DEL>;
    //   layers = <DEFAULT>;
    // };
  };
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap"; // https://zmk.dev/docs/keymaps/behaviors/hold-tap
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick_tap_ms = <200>;    // if double tapped, long-tabs the key instead of hold
      flavor = "balanced";
      bindings = <&kp>, <&kp>;
    };
    grave_esc: grave_escape {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&hm LCTRL ESC>, <&kp GRAVE>;
      mods = <(MOD_LGUI|MOD_RGUI)>;
      keep-mods = <(MOD_LGUI|MOD_RGUI)>;
    };
    bspdel: backspace_delete {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp BSPC>, <&kp DEL>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
  };
  keymap {
    compatible = "zmk,keymap";
    default_layer {
        label = "Default";
        display-name = "def";
        bindings = <
            &none &kp Q     &kp W     &kp E           &kp R     &kp T            &kp Y    &kp U       &kp I         &kp O       &kp P              &none
            &none &kp A     &kp S     &kp D           &kp F     &kp G            &kp H    &kp J       &kp K         &kp L       &kp SEMICOLON      &none
            &none &kp Z     &kp X     &kp C           &kp V     &kp B            &kp N    &kp M       &kp COMMA     &kp DOT     &kp SLASH          &none
                                      &hm LCTRL ESC   &kp LCMD  &kp SPACE        &bspdel  &kp ENTER   &kp RCTRL
        >;
    };
    num_layer {
        label = "Numbers";
        display-name = "num";
        bindings = <
            &none &kp N1    &kp N2  &kp N3    &kp N4      &kp N5          &kp N6      &kp N7      &kp N8    &kp N9    &kp N0    &none
            &none &trans    &trans  &trans    &kp LSHIFT  &trans          &kp GRAVE   &kp MINUS   &kp EQUAL &kp LBKT  &kp RBKT  &none
            &none &kp LALT  &trans  &trans    &trans      &trans          &trans      &trans      &trans    &kp SQT   &kp BSLH  &none
                                    &trans    &kp LCMD    &kp LSHIFT      &kp RSHIFT  &trans      &trans
        >;
    };
    // sym_layer {
    //     label = "Symbols";
    //     display-name = "sym";
    //     bindings = <
    //         &none &kp EXCL  &kp AT  &kp HASH    &kp DOLLAR  &kp PERCENT           &kp CARET         &kp AMPERSAND   &kp ASTERISK    &kp LPAR  &kp RPAR    &none
    //         &none &trans    &trans  &trans      &kp TILDE   &kp LEFT_BRACE        &kp RIGHT_BRACE   &kp UNDERSCORE  &kp PLUS        &kp DQT   &kp PIPE    &none
    //         &none &trans    &trans  &trans      &trans      &trans                &trans            &trans          &trans          &trans    &trans      &none
    //                                 &trans      &trans      &trans                &trans            &trans          &trans
    //     >;
    // };
    nav_layer {
        label = "Nav";
        display-name = "nav";
        bindings = <
            &none &trans    &trans     &trans       &kp TAB     &trans             &trans         &trans      &kp UP     &trans     &trans        &none
            &none &trans    &trans     &kp LALT     &kp LCMD    &trans             &kp LG(LBKT)   &kp LEFT    &kp DOWN   &kp RIGHT  &kp LG(RBKT)  &none
            &none &trans     &trans    &trans       &kp TILDE   &trans             &trans         &trans      &trans     &trans     &trans        &none
                                       &trans       &kp LCMD    &kp LSHIFT         &kp RSHIFT     &trans      &trans
        >;
    };
    // nav2_layer {
    //     label = "Nav2";
    //     display-name = "nav2";
    //     bindings = <
    //         &none &trans  &trans    &trans  &trans                 &trans                 &trans                &kp HOME           &kp PG_UP           &kp END            &trans   &none
    //         &none &trans  &trans    &trans  &trans                 &trans                 &kp LG(LBKT)          &kp LA(LEFT)       &kp PG_DN           &kp LA(RIGHT)      &kp LG(RBKT)   &none
    //         &none &trans  &trans    &trans  &trans                 &trans                 &trans                &kp LC(LG(LA(U)))  &trans              &kp LC(LG(LA(I)))  &trans   &none
    //                                             &trans  &hm LALT LS(LC(TAB))  &hm LCMD LC(TAB)     &hm RCMD LS(LC(TAB))  &hm RALT LC(TAB)   &hm RCTRL LG(GRAVE)
    //     >;
    // };
    media_layer {
        label = "Media";
        display-name = "med";
        bindings = <
            &none &trans  &kp C_VOL_DN  &kp C_MUTE        &kp C_VOL_UP      &trans              &rgb_ug RGB_BRI   &trans            &trans        &trans &trans &none
            &none &trans  &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT        &trans              &rgb_ug RGB_BRD   &rgb_ug RGB_TOG   &trans        &trans &trans &none
            &none &trans  &trans        &trans            &trans            &trans              &rgb_ug RGB_EFF   &trans            &trans        &trans &trans &none
                                        &trans            &trans            &trans              &kp C_VOL_DN      &kp C_MUTE        &kp C_VOL_UP
        >;
    };
    func_layer {
        label = "Func";
        display-name = "fn";
        bindings = <
            &none &kp F1   &kp F2   &kp F3  &kp F4  &kp F5     &trans  &trans  &trans  &trans  &trans &none
            &none &kp F6   &kp F7   &kp F8  &kp F9  &kp F10    &trans  &trans  &trans  &trans  &trans &none
            &none &kp F11  &kp F12  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans &none
                                                &trans  &trans  &trans     &trans  &trans  &trans
            >;
    };
  };
};
